"""
A registered account.
"""
type Account {
  """
  The account's unique handle. This is used to create default names for
  resources and for logging in.

  It can be changed, but this will not change the name of any resources
  that were created with the old handle.
  """
  handle: String!
  """
  A timestamp indicating the last time the user revoked all of their
  tokens.

  This is used to invalidate all tokens that were issued before the
  revocation.
  """
  revokedAt: DateTime
  """
  The account's unique ID.
  """
  id: ID!
}

"""
The information needed to authenticate an account.
"""
input AuthCreds {
  """
  The handle of the account to authenticate.
  """
  handle: String!
  """
  The account's password.
  """
  pword: String!
}

"""
The information needed to create a new account.
"""
input CreateAccount {
  """
  The account's unique handle. This is used to create default names for
  resources and for logging in.
  """
  handle: String!
  """
  The account's password.
  """
  pword: String!
  """
  An optional invite code.

  Whether this is required will depend on the server's configuration.
  """
  invite: String
}

"""
Implement the DateTime<Utc> scalar

The input/output is a string in RFC3339 format.
"""
scalar DateTime

type Mutation {
  """
  Request a new refresh token.
  """
  refreshToken(creds: AuthCreds!): String!
  """
  Register a new account.
  """
  createAccount(create: CreateAccount!): Account!
  """
  Revoke all tokens issued for the current account.
  """
  revokeTokens: DateTime!
}

type Query {
  """
  Get the account associated with the current session.

  If this returns `null`, then it means that the account associated with
  the current session has been deleted.
  """
  me: Account
  """
  Request an access token for authentication requests.
  """
  accessToken(refreshToken: String!): String!
}

schema {
  query: Query
  mutation: Mutation
}
