name: "Check & Build"

on:
  workflow_dispatch:
  push:
  pull_request:

permissions:
  contents: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  build-test:
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        include:
          - os: ubuntu-latest
            sccache-path: /home/runner/.cache/sccache

    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}

    runs-on: ${{ matrix.os }}

    steps:
      - name: Free Disk Space
        if: matrix.os == 'ubuntu-latest'
        uses: jlumbroso/free-disk-space@main

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Nu
        uses: hustcer/setup-nu@v3

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        id: rust-toolchain
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy, llvm-tools

      - name: Setup node toolchain
        uses: actions/setup-node@v3
        with:
          node-version: 20.x.x

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Print versions
        run: |
          nu --version
          rustup --version
          cargo --version
          rustc --version
          rustfmt --version
          cargo clippy --version
          node --version
          npm --version
          pnpm --version

      # https://github.com/sagiegurari/cargo-make/releases
      # https://github.com/1Password/typeshare/releases
      # https://github.com/mozilla/sccache/releases
      # https://github.com/mozilla/grcov/releases

      - name: Setup build tools
        run: |
          nu ./scripts/install-build-tools.nu --make-version 0.36.13 --typeshare-version 1.7.0 --sccache-version 0.5.4 --grcov-version 0.8.18
          echo "$(pwd)/.local/bin" >> $GITHUB_PATH

      - name: Setup cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup sccache cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: ${{ matrix.sccache-path }}
          key: ${{ runner.os }}-sccache-${{ steps.rust-toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-

      - name: Get pnpm store path
        id: pnpm-store
        run: echo "PNPM_STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-store.outputs.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup other build tools
        run: |
          pnpm install --global turbo
          # Disabled until tikv starts working
          # sudo apt-get update && sudo apt-get install -y protobuf-compiler

      - name: Start sccache server
        run: sccache --start-server

      - name: Install node dependencies
        run: pnpm install

      - name: Build Crates
        run: cargo make build-crates

      - name: Codegen
        run: cargo make codegen

      - name: Build Packages
        run: cargo make build-packages

      - name: Test
        run: cargo make test

      - name: Lint
        run: cargo make lint-check

      # TODO: Upload coverage somewhere
      - name: Coverage
        run: cargo make coverage

      - name: Print sccache stats
        if: always()
        run: sccache --show-stats

      - name: Stop sccache server
        if: always()
        run: sccache --stop-server || true
